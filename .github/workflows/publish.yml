name: Publish CLI and VSCode Extension

on:
  release:
    types: [published]
  push:
    tags:
      - 'cli-v*'
      - 'ext-v*'
  workflow_dispatch:
    inputs:
      publish_cli:
        description: 'Publish CLI package to NPM'
        required: true
        default: true
        type: boolean
      publish_extension:
        description: 'Publish VSCode extension to Marketplace'
        required: true
        default: true
        type: boolean

jobs:
  # Determine what should be published based on trigger
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      publish_cli: ${{ steps.check.outputs.publish_cli }}
      publish_extension: ${{ steps.check.outputs.publish_extension }}
    steps:
      - id: check
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "publish_cli=true" >> $GITHUB_OUTPUT
            echo "publish_extension=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "push" ]; then
            if [[ "${{ github.ref }}" == refs/tags/cli-v* ]]; then
              echo "publish_cli=true" >> $GITHUB_OUTPUT
              echo "publish_extension=false" >> $GITHUB_OUTPUT
            elif [[ "${{ github.ref }}" == refs/tags/ext-v* ]]; then
              echo "publish_cli=false" >> $GITHUB_OUTPUT
              echo "publish_extension=true" >> $GITHUB_OUTPUT
            fi
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "publish_cli=${{ inputs.publish_cli }}" >> $GITHUB_OUTPUT
            echo "publish_extension=${{ inputs.publish_extension }}" >> $GITHUB_OUTPUT
          fi

  publish-cli:
    needs: check-trigger
    if: needs.check-trigger.outputs.publish_cli == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install CLI dependencies
        run: npm ci

      - name: Build CLI
        run: npm run build

      - name: Run CLI tests
        run: npm test

      - name: Run CLI linting
        run: npm run lint

      - name: Publish CLI to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-extension:
    needs: [check-trigger, publish-cli]
    if: always() && needs.check-trigger.outputs.publish_extension == 'true' && (needs.publish-cli.result == 'success' || needs.publish-cli.result == 'skipped')
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install CLI dependencies
        run: npm ci

      - name: Build CLI
        run: npm run build

      - name: Install extension dependencies
        working-directory: ./vscode-extension
        run: npm ci

      - name: Compile extension
        working-directory: ./vscode-extension
        run: npm run compile

      - name: Run extension linting
        working-directory: ./vscode-extension
        run: npm run lint

      - name: Verify extension build integrity
        working-directory: ./vscode-extension
        run: |
          # Verify extension.js was compiled
          test -f dist/extension.js
          echo "âœ… Extension build verified"

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package VSCode extension
        working-directory: ./vscode-extension
        run: vsce package

      - name: Publish VSCode extension
        working-directory: ./vscode-extension
        run: vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension
          path: ./vscode-extension/*.vsix